// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// random
NumericVector random(double sigma, int n);
RcppExport SEXP _StatComp20013_random(SEXP sigmaSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(random(sigma, n));
    return rcpp_result_gen;
END_RCPP
}
// chain
NumericVector chain(double sig, int n1);
RcppExport SEXP _StatComp20013_chain(SEXP sigSEXP, SEXP n1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type sig(sigSEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    rcpp_result_gen = Rcpp::wrap(chain(sig, n1));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_StatComp20013_random", (DL_FUNC) &_StatComp20013_random, 2},
    {"_StatComp20013_chain", (DL_FUNC) &_StatComp20013_chain, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_StatComp20013(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
